"cholesky.h"

    void update_cholesky(T& L, int j)
    => void update_cholesky(Real* L, int L_rows, int L_cols, int j)  
    // called by addRowCol() in dense_cholesky.h

    void downdate_cholesky( T& L, int nrows, int id )
    => void downdate_cholesky(Real *L, int L_rows, int L_cols, int nrows, int id) 
    // called by removeRowCol() in dense_cholesky.h

    void backsolve(const T& a, U& x, V& b, int n)
    =>void backsolve(const Real *a, Real *x, Real *b, int n)
    // called by solve() in dense_cholesky.h


"dense_cholesky.h"
  
    void resize(int howManyRowCol)
    => void _resize(DenseCholesky *self, int howManyRowCol)

    void addRowCol( const T* vals ) {
    => void addRowCol(DenseCholesky *self, const Real* vals) {

    void removeRowCol( int r ) {
    => void (*removeRowCol) (DenseCholesky *, int);

    void solve(real* y, real* beta ) {
    => void (*solve) (DenseCholesky *, Real*, Real*);

    void print( ostream& out ) {
    => void print(DenseCholesky *self) {
